<!-- Copyright 2011 Square, Inc. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.squareup.keywhiz</groupId>
    <artifactId>keywhiz-parent</artifactId>
    <version>0.10.2-SNAPSHOT</version>
  </parent>

  <artifactId>keywhiz-server</artifactId>
  <name>Keywhiz Server</name>

  <profiles>
    <profile>
      <id>container</id>
      <properties>
        <maven.test.skip>true</maven.test.skip>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>create-keywhiz-database</id>
                <!-- This disables database creation -->
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>
        no-custom-mysql-port
      </id>
      <activation>
        <property>
          <name>!env.KEYWHIZ_CUSTOM_MYSQL_PORT</name>
        </property>
      </activation>
      <properties>
        <db.create-url>
          jdbc:mysql://(host=localhost,useUnicode=true,characterEncoding=utf8)
        </db.create-url>
        <db.migrate-url>
          jdbc:mysql://(host=localhost,useUnicode=true,characterEncoding=utf8)/keywhizdb_test
        </db.migrate-url>
      </properties>
    </profile>
    <profile>
      <id>
        custom-mysql-port
      </id>
      <activation>
        <property>
          <name>env.KEYWHIZ_CUSTOM_MYSQL_PORT</name>
        </property>
      </activation>
      <properties>
        <db.create-url>
          jdbc:mysql://(host=localhost,port=${env.KEYWHIZ_CUSTOM_MYSQL_PORT},useUnicode=true,characterEncoding=utf8)
        </db.create-url>
        <db.migrate-url>
          jdbc:mysql://(host=localhost,port=${env.KEYWHIZ_CUSTOM_MYSQL_PORT},useUnicode=true,characterEncoding=utf8)/keywhizdb_test
        </db.migrate-url>
      </properties>
    </profile>
  </profiles>

  <properties>
    <db.driver>com.mysql.cj.jdbc.Driver</db.driver>
    <db.username>root</db.username>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.squareup.keywhiz</groupId>
      <artifactId>keywhiz-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.squareup.keywhiz</groupId>
      <artifactId>keywhiz-hkdf</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.squareup.keywhiz</groupId>
      <artifactId>keywhiz-model</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.squareup.keywhiz</groupId>
      <artifactId>keywhiz-log</artifactId>
      <version>0.10.2-SNAPSHOT</version>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
    </dependency>

    <!-- GPG for backups -->
    <dependency>
      <groupId>org.c02e.jpgpj</groupId>
      <artifactId>jpgpj</artifactId>
      <version>1.3</version>
    </dependency>

    <!-- Guava makes the language better. -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>

    <!-- Dependency injection -->
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.inject.extensions</groupId>
      <artifactId>guice-multibindings</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
    </dependency>

    <!-- Database -->
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
    </dependency>

    <!-- Dropwizard dependencies -->
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-auth</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-db</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-views</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-views-mustache</artifactId>
    </dependency>
    <dependency>
      <groupId>org.dhatim</groupId>
      <artifactId>dropwizard-raven</artifactId>
    </dependency>

    <!-- Necessary for object type detection. -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>

    <!-- Support for ldap -->
    <dependency>
      <groupId>com.unboundid</groupId>
      <artifactId>unboundid-ldapsdk</artifactId>
    </dependency>

    <!-- Support for BCrypt -->
    <dependency>
      <groupId>de.svenkubiak</groupId>
      <artifactId>jBCrypt</artifactId>
    </dependency>

    <!-- Authentication support -->
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk15on</artifactId>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpg-jdk15on</artifactId>
    </dependency>

    <!-- Removes boilerplate for ServiceLoader registration. -->
    <dependency>
      <groupId>com.google.auto.service</groupId>
      <artifactId>auto-service</artifactId>
    </dependency>

    <!-- Tracing -->
    <dependency>
      <groupId>io.opentracing</groupId>
      <artifactId>opentracing-api</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentracing</groupId>
      <artifactId>opentracing-util</artifactId>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-guava</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-easymock</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.inject.extensions</groupId>
      <artifactId>guice-testlib</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.squareup.keywhiz</groupId>
      <artifactId>keywhiz-client</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.squareup.keywhiz</groupId>
      <artifactId>keywhiz-testing</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-testing</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>4.4.15</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Creates (or re-creates) a keywhizdb_test database. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>sql-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>create-keywhiz-database</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>execute</goal>
            </goals>
          </execution>
        </executions>

        <configuration>
          <driver>${db.driver}</driver>
          <url>${db.create-url}</url>
          <username>${db.username}</username>
          <autocommit>true</autocommit>
          <sqlCommand>
            DROP DATABASE IF EXISTS keywhizdb_test;
            CREATE DATABASE keywhizdb_test;
          </sqlCommand>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Class-Path>lib-signed/bcprov-jdk15on.jar</Class-Path>
                    <Main-Class>keywhiz.KeywhizService</Main-Class>
                    <Implementation-Version>${project.version}</Implementation-Version>
                  </manifestEntries>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
