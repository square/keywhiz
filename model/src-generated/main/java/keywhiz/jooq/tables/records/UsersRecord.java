/*
 * This file is generated by jOOQ.
 */
package keywhiz.jooq.tables.records;


import keywhiz.jooq.tables.Users;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record4<String, String, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>keywhizdb_test.users.username</code>.
     */
    public void setUsername(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>keywhizdb_test.users.username</code>.
     */
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>keywhizdb_test.users.password_hash</code>.
     */
    public void setPasswordHash(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>keywhizdb_test.users.password_hash</code>.
     */
    public String getPasswordHash() {
        return (String) get(1);
    }

    /**
     * Setter for <code>keywhizdb_test.users.updated_at</code>.
     */
    public void setUpdatedAt(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>keywhizdb_test.users.updated_at</code>.
     */
    public Long getUpdatedAt() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>keywhizdb_test.users.created_at</code>.
     */
    public void setCreatedAt(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>keywhizdb_test.users.created_at</code>.
     */
    public Long getCreatedAt() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, Long, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, Long, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Users.USERS.USERNAME;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.PASSWORD_HASH;
    }

    @Override
    public Field<Long> field3() {
        return Users.USERS.UPDATED_AT;
    }

    @Override
    public Field<Long> field4() {
        return Users.USERS.CREATED_AT;
    }

    @Override
    public String component1() {
        return getUsername();
    }

    @Override
    public String component2() {
        return getPasswordHash();
    }

    @Override
    public Long component3() {
        return getUpdatedAt();
    }

    @Override
    public Long component4() {
        return getCreatedAt();
    }

    @Override
    public String value1() {
        return getUsername();
    }

    @Override
    public String value2() {
        return getPasswordHash();
    }

    @Override
    public Long value3() {
        return getUpdatedAt();
    }

    @Override
    public Long value4() {
        return getCreatedAt();
    }

    @Override
    public UsersRecord value1(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setPasswordHash(value);
        return this;
    }

    @Override
    public UsersRecord value3(Long value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public UsersRecord value4(Long value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UsersRecord values(String value1, String value2, Long value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(String username, String passwordHash, Long updatedAt, Long createdAt) {
        super(Users.USERS);

        setUsername(username);
        setPasswordHash(passwordHash);
        setUpdatedAt(updatedAt);
        setCreatedAt(createdAt);
    }
}
